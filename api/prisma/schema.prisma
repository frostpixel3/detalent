// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums

enum ProjectStatus {
  QUOTING
  WAITING_PAYMENT
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum MessageSender {
  TALENT
  CUSTOMER
}

// Models

model User {
  id        String  @id @default(uuid())
  address   String  @unique
  firstName String?
  lastName  String?
  email     String?

  authTokens           AuthTokens?
  services             TalentService[]
  TalentServiceProject TalentServiceProject[]
}

model WalletAuthNonce {
  id      String @id @default(uuid())
  address String @unique
  nonce   String
}

model AuthTokens {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
  token  String
}

model TalentService {
  id          String @id @default(uuid())
  name        String
  description String
  coverImage  String

  talentId String
  talent   User                   @relation(fields: [talentId], references: [id])
  projects TalentServiceProject[]
}

model TalentServiceProject {
  id              String        @id @default(uuid())
  name            String
  description     String
  status          ProjectStatus @default(QUOTING)
  talentServiceId String
  talentService   TalentService @relation(fields: [talentServiceId], references: [id])

  customerId String
  customer   User                          @relation(fields: [customerId], references: [id])
  messages   TalentServiceProjectMessage[]

  invoiceRequestId String?
  invoiceAmount String?
  invoiceDueDate DateTime?
}

model TalentServiceProjectMessage {
  id                     String               @id @default(uuid())
  talentServiceProjectId String
  talentServiceProject   TalentServiceProject @relation(fields: [talentServiceProjectId], references: [id])
  message                String
  sender                 MessageSender
  createdAt              DateTime             @default(now())
}
